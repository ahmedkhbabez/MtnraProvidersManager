// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MtnraProvidersManager_DAL.Data;

#nullable disable

namespace MtnraProvidersManager_PAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220910175717_Alpha")]
    partial class Alpha
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MtnraProvidersManager_DAL.Models.CommonRightContract", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DirectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("Year")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AddedBy");

                    b.HasIndex("CompanyId");

                    b.HasIndex("DirectionId");

                    b.ToTable("CommonRightContracts");
                });

            modelBuilder.Entity("MtnraProvidersManager_DAL.Models.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FieldOfActivity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsSme")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AddedBy");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("MtnraProvidersManager_DAL.Models.Direction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid?>("AddedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExtendedName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("InterlocutorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AddedBy");

                    b.HasIndex("InterlocutorId");

                    b.ToTable("Directions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4e9d8e14-4ce6-4e34-bd98-30229687e2ee"),
                            Abbreviation = "DSI",
                            AddedBy = new Guid("021ca3c1-0deb-4afd-ae94-2159a8479811"),
                            CreatedOn = new DateTime(2022, 9, 10, 18, 57, 16, 916, DateTimeKind.Local).AddTicks(847),
                            ExtendedName = "Direction des Systèmes d'Information",
                            InterlocutorId = new Guid("aa98af7a-45f0-4ad0-b0af-9594512a8481"),
                            UpdatedOn = new DateTime(2022, 9, 10, 18, 57, 16, 916, DateTimeKind.Local).AddTicks(857)
                        },
                        new
                        {
                            Id = new Guid("07783724-bb27-41e9-a751-7f627d2f4941"),
                            Abbreviation = "DMA",
                            AddedBy = new Guid("021ca3c1-0deb-4afd-ae94-2159a8479811"),
                            CreatedOn = new DateTime(2022, 9, 10, 18, 57, 16, 916, DateTimeKind.Local).AddTicks(897),
                            ExtendedName = "Direction de la Modernisation de l'Administration",
                            InterlocutorId = new Guid("11bbfec4-f7f0-4fa0-8289-0dd682eb31df"),
                            UpdatedOn = new DateTime(2022, 9, 10, 18, 57, 16, 916, DateTimeKind.Local).AddTicks(905)
                        },
                        new
                        {
                            Id = new Guid("fcb05757-abaa-481f-acc7-1c93b9e676de"),
                            Abbreviation = "DRHF",
                            AddedBy = new Guid("021ca3c1-0deb-4afd-ae94-2159a8479811"),
                            CreatedOn = new DateTime(2022, 9, 10, 18, 57, 16, 916, DateTimeKind.Local).AddTicks(919),
                            ExtendedName = "Direction des Ressources Humaines et Financières",
                            InterlocutorId = new Guid("de194360-4865-4a95-a8fe-a28fc4168643"),
                            UpdatedOn = new DateTime(2022, 9, 10, 18, 57, 16, 916, DateTimeKind.Local).AddTicks(927)
                        },
                        new
                        {
                            Id = new Guid("05497807-8c9d-4803-9898-9d4712bd1a05"),
                            Abbreviation = "DFP",
                            AddedBy = new Guid("021ca3c1-0deb-4afd-ae94-2159a8479811"),
                            CreatedOn = new DateTime(2022, 9, 10, 18, 57, 16, 916, DateTimeKind.Local).AddTicks(945),
                            ExtendedName = "Direction de la Fonction Publique",
                            InterlocutorId = new Guid("0583dc04-8226-4347-a2c8-c72da3f1ff8b"),
                            UpdatedOn = new DateTime(2022, 9, 10, 18, 57, 16, 916, DateTimeKind.Local).AddTicks(954)
                        },
                        new
                        {
                            Id = new Guid("8e319ead-b98b-4e8e-81e4-74c05cc4df07"),
                            Abbreviation = "DECC",
                            AddedBy = new Guid("021ca3c1-0deb-4afd-ae94-2159a8479811"),
                            CreatedOn = new DateTime(2022, 9, 10, 18, 57, 16, 916, DateTimeKind.Local).AddTicks(981),
                            ExtendedName = "Direction des Études, de la Communication et de la Coopération",
                            InterlocutorId = new Guid("7c09511c-dd8d-423e-9f6a-5cb458e1da53"),
                            UpdatedOn = new DateTime(2022, 9, 10, 18, 57, 16, 916, DateTimeKind.Local).AddTicks(984)
                        });
                });

            modelBuilder.Entity("MtnraProvidersManager_DAL.Models.Interlocutor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AddedBy");

                    b.ToTable("Interlocutors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("aa98af7a-45f0-4ad0-b0af-9594512a8481"),
                            AddedBy = new Guid("021ca3c1-0deb-4afd-ae94-2159a8479811"),
                            CreatedOn = new DateTime(2022, 9, 10, 18, 57, 16, 916, DateTimeKind.Local).AddTicks(415),
                            FirstName = "Mohamed",
                            LastName = "MOUSSA",
                            UpdatedOn = new DateTime(2022, 9, 10, 18, 57, 16, 916, DateTimeKind.Local).AddTicks(423)
                        },
                        new
                        {
                            Id = new Guid("11bbfec4-f7f0-4fa0-8289-0dd682eb31df"),
                            AddedBy = new Guid("021ca3c1-0deb-4afd-ae94-2159a8479811"),
                            CreatedOn = new DateTime(2022, 9, 10, 18, 57, 16, 916, DateTimeKind.Local).AddTicks(459),
                            FirstName = "Jamal",
                            LastName = "SALAHEDDINE",
                            UpdatedOn = new DateTime(2022, 9, 10, 18, 57, 16, 916, DateTimeKind.Local).AddTicks(467)
                        },
                        new
                        {
                            Id = new Guid("de194360-4865-4a95-a8fe-a28fc4168643"),
                            AddedBy = new Guid("021ca3c1-0deb-4afd-ae94-2159a8479811"),
                            CreatedOn = new DateTime(2022, 9, 10, 18, 57, 16, 916, DateTimeKind.Local).AddTicks(479),
                            FirstName = "Aziz",
                            LastName = "KHALLADI",
                            UpdatedOn = new DateTime(2022, 9, 10, 18, 57, 16, 916, DateTimeKind.Local).AddTicks(484)
                        },
                        new
                        {
                            Id = new Guid("0583dc04-8226-4347-a2c8-c72da3f1ff8b"),
                            AddedBy = new Guid("021ca3c1-0deb-4afd-ae94-2159a8479811"),
                            CreatedOn = new DateTime(2022, 9, 10, 18, 57, 16, 916, DateTimeKind.Local).AddTicks(494),
                            FirstName = "Taoufik",
                            LastName = "AZARUAL",
                            UpdatedOn = new DateTime(2022, 9, 10, 18, 57, 16, 916, DateTimeKind.Local).AddTicks(500)
                        },
                        new
                        {
                            Id = new Guid("7c09511c-dd8d-423e-9f6a-5cb458e1da53"),
                            AddedBy = new Guid("021ca3c1-0deb-4afd-ae94-2159a8479811"),
                            CreatedOn = new DateTime(2022, 9, 10, 18, 57, 16, 916, DateTimeKind.Local).AddTicks(511),
                            FirstName = "Sarah",
                            LastName = "LAMRANI",
                            UpdatedOn = new DateTime(2022, 9, 10, 18, 57, 16, 916, DateTimeKind.Local).AddTicks(514)
                        });
                });

            modelBuilder.Entity("MtnraProvidersManager_DAL.Models.InvitationToTender", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DirectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExecutionLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasLaunched")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReservedForSme")
                        .HasColumnType("bit");

                    b.Property<int>("Nature")
                        .HasColumnType("int");

                    b.Property<string>("Object")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OpenedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Trimester")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("Year")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AddedBy");

                    b.HasIndex("DirectionId");

                    b.ToTable("InvitationsToTender");
                });

            modelBuilder.Entity("MtnraProvidersManager_DAL.Models.Market", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DefinitiveReception")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DirectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Estimation")
                        .HasColumnType("float");

                    b.Property<DateTime>("LaunchedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Nature")
                        .HasColumnType("int");

                    b.Property<string>("Object")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OriginalInvitationToTenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ProvisionalReception")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("WarrantyDeadline")
                        .HasColumnType("datetime2");

                    b.Property<long>("Year")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AddedBy");

                    b.HasIndex("CompanyId");

                    b.HasIndex("DirectionId");

                    b.HasIndex("OriginalInvitationToTenderId");

                    b.ToTable("Markets");
                });

            modelBuilder.Entity("MtnraProvidersManager_DAL.Models.MarketStateHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("MarketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AddedBy");

                    b.HasIndex("MarketId");

                    b.ToTable("MarketsStateHistory");
                });

            modelBuilder.Entity("MtnraProvidersManager_DAL.Models.PurchaseOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DirectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("Year")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AddedBy");

                    b.HasIndex("CompanyId");

                    b.HasIndex("DirectionId");

                    b.ToTable("PurchaseOrders");
                });

            modelBuilder.Entity("MtnraProvidersManager_DAL.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("AddedBy");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("021ca3c1-0deb-4afd-ae94-2159a8479811"),
                            CreatedOn = new DateTime(2022, 9, 10, 18, 57, 16, 915, DateTimeKind.Local).AddTicks(9768),
                            FirstName = "Mock",
                            HashedPassword = "$2a$12$N1WBrH9z10xi1OSrcgvG..3xMyWIMgaaO.f6CcC.r33Nhzn4Mm4ve",
                            LastName = "Admin",
                            Role = "Admin",
                            UpdatedOn = new DateTime(2022, 9, 10, 18, 57, 16, 915, DateTimeKind.Local).AddTicks(9829),
                            Username = "admin"
                        },
                        new
                        {
                            Id = new Guid("86dba8c0-d178-41e7-938c-ed49778fb52a"),
                            AddedBy = new Guid("021ca3c1-0deb-4afd-ae94-2159a8479811"),
                            CreatedOn = new DateTime(2022, 9, 10, 18, 57, 16, 915, DateTimeKind.Local).AddTicks(9870),
                            FirstName = "Mock",
                            HashedPassword = "$2a$12$G5zksm0jpyy63xRlG3NACuACiwJ13cX3uROX4UKrmVWI9lA4ZF60O",
                            LastName = "Moderator",
                            Role = "Moderator",
                            UpdatedOn = new DateTime(2022, 9, 10, 18, 57, 16, 915, DateTimeKind.Local).AddTicks(9872),
                            Username = "user"
                        });
                });

            modelBuilder.Entity("MtnraProvidersManager_DAL.Models.CommonRightContract", b =>
                {
                    b.HasOne("MtnraProvidersManager_DAL.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("AddedBy");

                    b.HasOne("MtnraProvidersManager_DAL.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MtnraProvidersManager_DAL.Models.Direction", "Direction")
                        .WithMany()
                        .HasForeignKey("DirectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Creator");

                    b.Navigation("Direction");
                });

            modelBuilder.Entity("MtnraProvidersManager_DAL.Models.Company", b =>
                {
                    b.HasOne("MtnraProvidersManager_DAL.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("AddedBy");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("MtnraProvidersManager_DAL.Models.Direction", b =>
                {
                    b.HasOne("MtnraProvidersManager_DAL.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("AddedBy");

                    b.HasOne("MtnraProvidersManager_DAL.Models.Interlocutor", "Interlocutor")
                        .WithMany()
                        .HasForeignKey("InterlocutorId");

                    b.Navigation("Creator");

                    b.Navigation("Interlocutor");
                });

            modelBuilder.Entity("MtnraProvidersManager_DAL.Models.Interlocutor", b =>
                {
                    b.HasOne("MtnraProvidersManager_DAL.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("AddedBy");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("MtnraProvidersManager_DAL.Models.InvitationToTender", b =>
                {
                    b.HasOne("MtnraProvidersManager_DAL.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("AddedBy");

                    b.HasOne("MtnraProvidersManager_DAL.Models.Direction", "Direction")
                        .WithMany()
                        .HasForeignKey("DirectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");

                    b.Navigation("Direction");
                });

            modelBuilder.Entity("MtnraProvidersManager_DAL.Models.Market", b =>
                {
                    b.HasOne("MtnraProvidersManager_DAL.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("AddedBy");

                    b.HasOne("MtnraProvidersManager_DAL.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("MtnraProvidersManager_DAL.Models.Direction", "Direction")
                        .WithMany()
                        .HasForeignKey("DirectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MtnraProvidersManager_DAL.Models.InvitationToTender", "OriginalInvitationToTender")
                        .WithMany()
                        .HasForeignKey("OriginalInvitationToTenderId");

                    b.Navigation("Company");

                    b.Navigation("Creator");

                    b.Navigation("Direction");

                    b.Navigation("OriginalInvitationToTender");
                });

            modelBuilder.Entity("MtnraProvidersManager_DAL.Models.MarketStateHistory", b =>
                {
                    b.HasOne("MtnraProvidersManager_DAL.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("AddedBy");

                    b.HasOne("MtnraProvidersManager_DAL.Models.Market", "Market")
                        .WithMany("StatesHistory")
                        .HasForeignKey("MarketId");

                    b.Navigation("Creator");

                    b.Navigation("Market");
                });

            modelBuilder.Entity("MtnraProvidersManager_DAL.Models.PurchaseOrder", b =>
                {
                    b.HasOne("MtnraProvidersManager_DAL.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("AddedBy");

                    b.HasOne("MtnraProvidersManager_DAL.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("MtnraProvidersManager_DAL.Models.Direction", "Direction")
                        .WithMany()
                        .HasForeignKey("DirectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Creator");

                    b.Navigation("Direction");
                });

            modelBuilder.Entity("MtnraProvidersManager_DAL.Models.User", b =>
                {
                    b.HasOne("MtnraProvidersManager_DAL.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("AddedBy");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("MtnraProvidersManager_DAL.Models.Market", b =>
                {
                    b.Navigation("StatesHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
